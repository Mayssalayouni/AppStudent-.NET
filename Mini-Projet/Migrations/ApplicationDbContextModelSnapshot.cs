// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mini_Projet.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiniProjet.Models.Absence", b =>
                {
                    b.Property<int>("CodeAbsence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeAbsence"));

                    b.Property<int?>("ClasseCodeClasse")
                        .HasColumnType("int");

                    b.Property<int>("CodeClasse")
                        .HasColumnType("int");

                    b.Property<int>("CodeEnseignant")
                        .HasColumnType("int");

                    b.Property<int>("CodeMatiere")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateJour")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnseignantCodeEnseignant")
                        .HasColumnType("int");

                    b.Property<int?>("MatiereCodeMatiere")
                        .HasColumnType("int");

                    b.Property<int?>("SeanceCodeSeance")
                        .HasColumnType("int");

                    b.HasKey("CodeAbsence");

                    b.HasIndex("ClasseCodeClasse");

                    b.HasIndex("CodeClasse");

                    b.HasIndex("CodeEnseignant");

                    b.HasIndex("CodeMatiere");

                    b.HasIndex("EnseignantCodeEnseignant");

                    b.HasIndex("MatiereCodeMatiere");

                    b.HasIndex("SeanceCodeSeance");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("Mini_Projet.Models.Classe", b =>
                {
                    b.Property<int>("CodeClasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeClasse"));

                    b.Property<int>("CodeDepartement")
                        .HasColumnType("int");

                    b.Property<int>("CodeGroupe")
                        .HasColumnType("int");

                    b.Property<string>("NomClasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeClasse");

                    b.HasIndex("CodeDepartement");

                    b.HasIndex("CodeGroupe");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Mini_Projet.Models.Departement", b =>
                {
                    b.Property<int>("CodeDepartement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeDepartement"));

                    b.Property<string>("NomDepartement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeDepartement");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("Mini_Projet.Models.Enseignant", b =>
                {
                    b.Property<int>("CodeEnseignant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeEnseignant"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodeDepartement")
                        .HasColumnType("int");

                    b.Property<int>("CodeGrade")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRecrutement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeEnseignant");

                    b.HasIndex("CodeDepartement");

                    b.HasIndex("CodeGrade");

                    b.ToTable("Enseignants");
                });

            modelBuilder.Entity("Mini_Projet.Models.Etudiant", b =>
                {
                    b.Property<int>("CodeEtudiant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeEtudiant"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClasseCodeClasse")
                        .HasColumnType("int");

                    b.Property<int>("CodeClasse")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumInscription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeEtudiant");

                    b.HasIndex("ClasseCodeClasse");

                    b.ToTable("Etudiants");
                });

            modelBuilder.Entity("Mini_Projet.Models.FicheAbsenceSeance", b =>
                {
                    b.Property<int>("CodeAbsence")
                        .HasColumnType("int");

                    b.Property<int>("CodeSeance")
                        .HasColumnType("int");

                    b.HasKey("CodeAbsence");

                    b.HasIndex("CodeSeance");

                    b.ToTable("FichesAbsenceSeances");
                });

            modelBuilder.Entity("Mini_Projet.Models.Grade", b =>
                {
                    b.Property<int>("CodeGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeGrade"));

                    b.Property<string>("NomGrade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeGrade");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Mini_Projet.Models.Groupe", b =>
                {
                    b.Property<int>("CodeGroupe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeGroupe"));

                    b.Property<string>("NomGroupe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeGroupe");

                    b.ToTable("groupes");
                });

            modelBuilder.Entity("Mini_Projet.Models.LigneFicheAbsence", b =>
                {
                    b.Property<int>("CodeLigne")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeLigne"));

                    b.Property<int>("CodeAbsence")
                        .HasColumnType("int");

                    b.Property<int>("CodeEtudiant")
                        .HasColumnType("int");

                    b.Property<bool>("StatutAbsent")
                        .HasColumnType("bit");

                    b.HasKey("CodeLigne");

                    b.HasIndex("CodeAbsence");

                    b.HasIndex("CodeEtudiant");

                    b.ToTable("ligneFicheAbsences");
                });

            modelBuilder.Entity("Mini_Projet.Models.Matiere", b =>
                {
                    b.Property<int>("CodeMatiere")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeMatiere"));

                    b.Property<int>("NbreHeureCoursParSemaine")
                        .HasColumnType("int");

                    b.Property<int>("NbreHeureTDParSemaine")
                        .HasColumnType("int");

                    b.Property<int>("NbreHeureTPParSemaine")
                        .HasColumnType("int");

                    b.Property<string>("NomMatiere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeMatiere");

                    b.ToTable("Matieres");
                });

            modelBuilder.Entity("Mini_Projet.Models.Seance", b =>
                {
                    b.Property<int>("CodeSeance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeSeance"));

                    b.Property<TimeSpan>("HeureDebut")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HeureFin")
                        .HasColumnType("time");

                    b.Property<string>("NomSeance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeSeance");

                    b.ToTable("Seances");
                });

            modelBuilder.Entity("Mini_Projet.Models.UserEcole", b =>
                {
                    b.Property<int>("CodeUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeUser"));

                    b.Property<string>("EmailUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenomUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeUser");

                    b.ToTable("UserEcoles");
                });

            modelBuilder.Entity("MiniProjet.Models.Absence", b =>
                {
                    b.HasOne("Mini_Projet.Models.Classe", null)
                        .WithMany("Absences")
                        .HasForeignKey("ClasseCodeClasse");

                    b.HasOne("Mini_Projet.Models.Classe", "Classe")
                        .WithMany()
                        .HasForeignKey("CodeClasse")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mini_Projet.Models.Enseignant", "Enseignant")
                        .WithMany()
                        .HasForeignKey("CodeEnseignant")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mini_Projet.Models.Matiere", "Matiere")
                        .WithMany()
                        .HasForeignKey("CodeMatiere")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mini_Projet.Models.Enseignant", null)
                        .WithMany("Absences")
                        .HasForeignKey("EnseignantCodeEnseignant");

                    b.HasOne("Mini_Projet.Models.Matiere", null)
                        .WithMany("Absences")
                        .HasForeignKey("MatiereCodeMatiere");

                    b.HasOne("Mini_Projet.Models.Seance", null)
                        .WithMany("Absences")
                        .HasForeignKey("SeanceCodeSeance");

                    b.Navigation("Classe");

                    b.Navigation("Enseignant");

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("Mini_Projet.Models.Classe", b =>
                {
                    b.HasOne("Mini_Projet.Models.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("CodeDepartement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mini_Projet.Models.Groupe", "Groupe")
                        .WithMany("Classes")
                        .HasForeignKey("CodeGroupe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("Groupe");
                });

            modelBuilder.Entity("Mini_Projet.Models.Enseignant", b =>
                {
                    b.HasOne("Mini_Projet.Models.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("CodeDepartement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mini_Projet.Models.Grade", "Grade")
                        .WithMany("Enseignants")
                        .HasForeignKey("CodeGrade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Mini_Projet.Models.Etudiant", b =>
                {
                    b.HasOne("Mini_Projet.Models.Classe", "Classe")
                        .WithMany("Etudiants")
                        .HasForeignKey("ClasseCodeClasse");

                    b.Navigation("Classe");
                });

            modelBuilder.Entity("Mini_Projet.Models.FicheAbsenceSeance", b =>
                {
                    b.HasOne("MiniProjet.Models.Absence", "Absence")
                        .WithMany("FicheAbsenceSeances")
                        .HasForeignKey("CodeAbsence")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mini_Projet.Models.Seance", "Seance")
                        .WithMany()
                        .HasForeignKey("CodeSeance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Absence");

                    b.Navigation("Seance");
                });

            modelBuilder.Entity("Mini_Projet.Models.LigneFicheAbsence", b =>
                {
                    b.HasOne("MiniProjet.Models.Absence", "Absence")
                        .WithMany("FicheLignesAbsence")
                        .HasForeignKey("CodeAbsence")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mini_Projet.Models.Etudiant", "Etudiant")
                        .WithMany()
                        .HasForeignKey("CodeEtudiant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Absence");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("MiniProjet.Models.Absence", b =>
                {
                    b.Navigation("FicheAbsenceSeances");

                    b.Navigation("FicheLignesAbsence");
                });

            modelBuilder.Entity("Mini_Projet.Models.Classe", b =>
                {
                    b.Navigation("Absences");

                    b.Navigation("Etudiants");
                });

            modelBuilder.Entity("Mini_Projet.Models.Enseignant", b =>
                {
                    b.Navigation("Absences");
                });

            modelBuilder.Entity("Mini_Projet.Models.Grade", b =>
                {
                    b.Navigation("Enseignants");
                });

            modelBuilder.Entity("Mini_Projet.Models.Groupe", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("Mini_Projet.Models.Matiere", b =>
                {
                    b.Navigation("Absences");
                });

            modelBuilder.Entity("Mini_Projet.Models.Seance", b =>
                {
                    b.Navigation("Absences");
                });
#pragma warning restore 612, 618
        }
    }
}
